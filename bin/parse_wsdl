#!/usr/bin/env python
# Copyright (c) 2010-2011 Mitch Garnaat http://garnaat.org/
# Copyright (c) 2010-2011, Eucalyptus Systems, Inc.
# All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish, dis-
# tribute, sublicense, and/or sell copies of the Software, and to permit
# persons to whom the Software is furnished to do so, subject to the fol-
# lowing conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-
# ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT
# SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.
#

import sys
import os
import optparse
import roboto.wsdlparser

if __name__ == '__main__':
    usage = 'usage: %prog [options] wsdl_file'
    parser = optparse.OptionParser(usage=usage)
    parser.add_option("--json-dir",
                      help="Directory in which to write JSON files",
                      default='json')
    parser.add_option("--bin-dir",
                      help="Directory in which to write bin wrappers",
                      default='bin')
    parser.add_option("--prefix",
                      help="Prefix for command wrappers (e.g. iam, ec2)",
                      default='')
    parser.add_option("--class-name",
                      help="Name of Connection class to instantiate",
                      default=None)
    parser.add_option("--module",
                      help="Boto module containing the Connection class",
                      default=None)
    parser.add_option("--template",
                      help="Template file for bin wrappers",
                      default=None)
    options, args = parser.parse_args()
    print options, args
    if len(args) != 1:
        parser.error('Must supply a WSDL file')
    
    wsdl_file = args[0]
    wsdl_file = os.path.expanduser(wsdl_file)
    wsdl_file = os.path.expandvars(wsdl_file)
    
    json_dir = options.json_dir
    json_dir = os.path.expanduser(json_dir)
    json_dir = os.path.expandvars(json_dir)
    if not os.path.isdir(json_dir):
        parser.error('%s is not a valid directory' % json_dir)
        
    bin_dir = options.bin_dir
    bin_dir = os.path.expanduser(bin_dir)
    bin_dir = os.path.expandvars(bin_dir)
    if not os.path.isdir(bin_dir):
        parser.error('%s is not a valid directory' % bin_dir)

    template = options.template
    template = os.path.expanduser(template)
    template = os.path.expandvars(template)
    if not os.path.isfile(template):
        parser.error('%s does not exist' % template)
    
        
    roboto.wsdlparser.build_json(wsdl_file=wsdl_file,
                                 json_dir=json_dir,
                                 bin_dir=bin_dir,
                                 template=template,
                                 module_name=options.module,
                                 class_name=options.class_name,
                                 prefix=options.prefix)
